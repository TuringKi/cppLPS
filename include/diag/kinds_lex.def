/*
* MIT License
* Copyright (c) 2023 mxlol233 (mxlol233@outlook.com)

* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:

* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.

* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
*LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/

DIAG(unknown_tok, "unexpected unknown token.", "", Level::kError)
DIAG(empty_char_literal, "char_literal is empty.", "", Level::kError)
DIAG(unfinished_char_literal, "char_literal definition not complete.", "",
     Level::kError)
DIAG(unfinished_string_literal, "string_literal definition not complete.", "",
     Level::kError)
DIAG(raw_string_delimiter_too_long,
     "the delimiter of this raw_string is too long.", "", Level::kError)
DIAG(raw_string_invalid_delimiter,
     "the delimiter of this raw_string is not valid.", "", Level::kError)
DIAG(unfinished_raw_string_because_of_delimiter,
     "the post-delimiter of this raw_string not equal to the previous one.", "",
     Level::kError)
DIAG(unfinished_raw_string, "raw_string definition not complete.", "",
     Level::kError)
DIAG(unfinished_raw_string_expect_quotation,
     "raw_string definition not complete, expect quotation to finish it.",
     "expected `\"`", Level::kError)
DIAG(unfinished_header_name_expected_gt,
     "header_name definition not complete, expect quotation to finish it.",
     "expected `>`", Level::kError)
DIAG(unfinished_header_name_expected_quotation,
     "header_name definition not complete, expect quotation to finish it.",
     "expected `\"`", Level::kError)
DIAG(redefine_ident_in_preprocessing,
     "this identifier has already been defined, the new one will replace the "
     "old one.",
     "", Level::kWarning)
DIAG(expected_ident_after_define_undef,
     "expected an identifier after #define or #undef macro.", "", Level::kError)
DIAG(undef_on_no_defined_ident, "trying to undef a not defined identifier.", "",
     Level::kWarning)
